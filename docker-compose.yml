version: "3.9"

services:
    app:
        build:
            context: .
            dockerfile: docker/app/Dockerfile
            target: dev
        volumes:
            - .:/var/www/html
        entrypoint: /usr/local/bin/docker-php-entrypoint-dev
        command: [ "/usr/bin/supervisord", "-n", "-c", "/etc/supervisord.conf" ]
        ports:
            - "${DOCKER_APP_PORT:-81}:80"
    db:
        image: mysql:8.4.0
        volumes:
            - mysql-db-data:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=${DOCKER_MYSQL_ROOT_PASSWORD:-root}
            - MYSQL_USER=${DOCKER_MYSQL_USER:-default}
            - MYSQL_PASSWORD=${DOCKER_MYSQL_PASSWORD:-secret}
            - MYSQL_DATABASE=${DOCKER_MYSQL_DATABASE:-laravel}
            # didn't want to add any bind mount or additional Dockerfile, so put it to env variable
            # $$ is used for escaping from docker-compose @see https://docs.docker.com/compose/environment-variables/#substitute-environment-variables-in-compose-files
            # Init script will be run ONLY on first initialization
            - |
                MYSQL_INIT_SCRIPT=
                ## main database ##
                CREATE DATABASE IF NOT EXISTS `${DOCKER_MYSQL_DATABASE:-laravel}` COLLATE 'utf8mb4_unicode_ci' ;
                GRANT ALL ON `${DOCKER_MYSQL_DATABASE:-laravel}`.* TO '${DOCKER_MYSQL_USER:-default}'@'%' ;

                ## test database ##
                CREATE DATABASE IF NOT EXISTS `${DOCKER_MYSQL_DATABASE:-laravel}_test` COLLATE 'utf8mb4_unicode_ci' ;
                GRANT ALL ON `${DOCKER_MYSQL_DATABASE:-laravel}_test`.* TO '${DOCKER_MYSQL_USER:-default}'@'%' ;

                FLUSH PRIVILEGES ;
            - |
                MYSQL_CONFIG=
                [mysqld]
                #
                # You can use this file to overwrite the default configuration
                #
                default_time_zone='+00:00'
        # didn't want to add any bind mount or additional Dockerfile
        command:
            bash -c 'echo "$$MYSQL_INIT_SCRIPT" > /docker-entrypoint-initdb.d/init.sql
            && chmod 555 /docker-entrypoint-initdb.d/init.sql
            && echo "$$MYSQL_CONFIG" > /etc/mysql/conf.d/my.cnf
            && chmod 555 /etc/mysql/conf.d/my.cnf
            && docker-entrypoint.sh mysqld --ignore-db-dir=lost+found'

volumes:
    mysql-db-data:
